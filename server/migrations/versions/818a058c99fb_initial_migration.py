"""Initial migration

Revision ID: 818a058c99fb
Revises: 
Create Date: 2020-04-21 16:15:04.511685

"""
from alembic import op
import sqlalchemy as sa
import yaits_api


# revision identifiers, used by Alembic.
revision = '818a058c99fb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('unique_id', yaits_api.models.GUID(), nullable=False),
    sa.Column('username', sa.String(length=32), nullable=False),
    sa.Column('hashed_pw', sa.String(length=128), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('unique_id')
    )
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('jwt_blacklist',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('jti', sa.String(length=36), nullable=False),
    sa.Column('user_unique_id', yaits_api.models.GUID(), nullable=False),
    sa.Column('blacklist_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_unique_id'], ['users.unique_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_jwt_blacklist_jti'), 'jwt_blacklist', ['jti'], unique=True)
    op.create_table('team',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('slug', sa.String(length=64), nullable=False),
    sa.Column('owner_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_team_name'), 'team', ['name'], unique=True)
    op.create_index(op.f('ix_team_slug'), 'team', ['slug'], unique=True)
    op.create_table('issue_status',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('unique_id', yaits_api.models.GUID(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('ordering', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'team_id'),
    sa.UniqueConstraint('team_id', 'ordering'),
    sa.UniqueConstraint('unique_id')
    )
    op.create_index(op.f('ix_issue_status_name'), 'issue_status', ['name'], unique=False)
    op.create_index(op.f('ix_issue_status_team_id'), 'issue_status', ['team_id'], unique=False)
    op.create_table('team_membership',
    sa.Column('team_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('user_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('team_id', 'user_id')
    )
    op.create_table('issue',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('unique_id', yaits_api.models.GUID(), nullable=False),
    sa.Column('short_description', sa.String(length=64), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_updated', sa.DateTime(), nullable=True),
    sa.Column('status_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('team_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('created_by_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('assigned_to_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.CheckConstraint('date_created <= date_updated'),
    sa.CheckConstraint('priority < 10'),
    sa.ForeignKeyConstraint(['assigned_to_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['issue_status.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('unique_id')
    )
    op.create_index(op.f('ix_issue_assigned_to_id'), 'issue', ['assigned_to_id'], unique=False)
    op.create_index(op.f('ix_issue_created_by_id'), 'issue', ['created_by_id'], unique=False)
    op.create_index(op.f('ix_issue_priority'), 'issue', ['priority'], unique=False)
    op.create_index(op.f('ix_issue_status_id'), 'issue', ['status_id'], unique=False)
    op.create_index(op.f('ix_issue_team_id'), 'issue', ['team_id'], unique=False)
    op.create_table('issue_comment',
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('issue_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('user_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['issue_id'], ['issue.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_issue_comment_timestamp'), 'issue_comment', ['timestamp'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_issue_comment_timestamp'), table_name='issue_comment')
    op.drop_table('issue_comment')
    op.drop_index(op.f('ix_issue_team_id'), table_name='issue')
    op.drop_index(op.f('ix_issue_status_id'), table_name='issue')
    op.drop_index(op.f('ix_issue_priority'), table_name='issue')
    op.drop_index(op.f('ix_issue_created_by_id'), table_name='issue')
    op.drop_index(op.f('ix_issue_assigned_to_id'), table_name='issue')
    op.drop_table('issue')
    op.drop_table('team_membership')
    op.drop_index(op.f('ix_issue_status_team_id'), table_name='issue_status')
    op.drop_index(op.f('ix_issue_status_name'), table_name='issue_status')
    op.drop_table('issue_status')
    op.drop_index(op.f('ix_team_slug'), table_name='team')
    op.drop_index(op.f('ix_team_name'), table_name='team')
    op.drop_table('team')
    op.drop_index(op.f('ix_jwt_blacklist_jti'), table_name='jwt_blacklist')
    op.drop_table('jwt_blacklist')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
